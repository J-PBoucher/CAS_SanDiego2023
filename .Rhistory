colnames(table1)[4] <- ''
colnames(table1)[5] <- ''
colnames(table1)[6] <- ''
table2<- data.frame(matrix2)
table2[,1] <- percent(table2[,1], accuracy = 0.1)
table2[,2] <- percent(table2[,2], accuracy = 0.1)
table2[,3] <- percent(table2[,3], accuracy = 0.1)
table2[,4] <- percent(table2[,4], accuracy = 0.1)
table2[,5] <- percent(table2[,5], accuracy = 0.1)
table2[,6] <- percent(table2[,6], accuracy = 0.1)
colnames(table2)[1] <- ''
colnames(table2)[2] <- ''
colnames(table2)[3] <- ''
colnames(table2)[4] <- ''
colnames(table2)[5] <- ''
colnames(table2)[6] <- ''
for(i in 1:30){
matrix1 <- matrix1%*%matrix1
matrix2 <- matrix2%*%matrix2
}
table1<- data.frame(matrix1)
table1[,1] <- percent(table1[,1], accuracy = 0.1)
table1[,2] <- percent(table1[,2], accuracy = 0.1)
table1[,3] <- percent(table1[,3], accuracy = 0.1)
table1[,4] <- percent(table1[,4], accuracy = 0.1)
table1[,5] <- percent(table1[,5], accuracy = 0.1)
table1[,6] <- percent(table1[,6], accuracy = 0.1)
colnames(table1)[1] <- ''
colnames(table1)[2] <- ''
colnames(table1)[3] <- ''
colnames(table1)[4] <- ''
colnames(table1)[5] <- ''
colnames(table1)[6] <- ''
table2<- data.frame(matrix2)
table2[,1] <- percent(table2[,1], accuracy = 0.1)
table2[,2] <- percent(table2[,2], accuracy = 0.1)
table2[,3] <- percent(table2[,3], accuracy = 0.1)
table2[,4] <- percent(table2[,4], accuracy = 0.1)
table2[,5] <- percent(table2[,5], accuracy = 0.1)
table2[,6] <- percent(table2[,6], accuracy = 0.1)
colnames(table2)[1] <- ''
colnames(table2)[2] <- ''
colnames(table2)[3] <- ''
colnames(table2)[4] <- ''
colnames(table2)[5] <- ''
colnames(table2)[6] <- ''
knitr::kable(table2, format = "html", align = "ccccc", row.names=F, table.attr = "style='width:95%;'", format.args = list(big.mark = ","))
table1
lambda <- 0.1899
p0 <- exp(-lambda)
p1 <- lambda*exp(-lambda)
p2 <- (lambda^2)*exp(-lambda)/2
s1 <- c(p0,0,p1,0,p2,1-(p0+p1+p2))
s2 <- c(p0,0,0,p1,0,1-p1-p0)
s3 <- c(0,p0,0,0,p1,1-p1-p0)
s4 <- c(0,0,p0,0,0,1-p0)
s5 <- c(0,0,0,p0, 0, 1-p0)
s6 <- c(0,0,0,0,p0,1-p0)
matrix1 <- rbind(s1, s2, s3, s4, s5, s6)
lambda <- 0.3798
p0 <- exp(-lambda)
p1 <- lambda*exp(-lambda)
p2 <- (lambda^2)*exp(-lambda)/2
s1 <- c(p0,0,p1,0,p2,1-(p0+p1+p2))
s2 <- c(p0,0,0,p1,0,1-p1-p0)
s3 <- c(0,p0,0,0,p1,1-p1-p0)
s4 <- c(0,0,p0,0,0,1-p0)
s5 <- c(0,0,0,p0, 0, 1-p0)
s6 <- c(0,0,0,0,p0,1-p0)
matrix2 <- rbind(s1, s2, s3, s4, s5, s6)
table1<- data.frame(matrix1)
table1[,1] <- percent(table1[,1], accuracy = 0.1)
table1[,2] <- percent(table1[,2], accuracy = 0.1)
table1[,3] <- percent(table1[,3], accuracy = 0.1)
table1[,4] <- percent(table1[,4], accuracy = 0.1)
table1[,5] <- percent(table1[,5], accuracy = 0.1)
table1[,6] <- percent(table1[,6], accuracy = 0.1)
colnames(table1)[1] <- ''
colnames(table1)[2] <- ''
colnames(table1)[3] <- ''
colnames(table1)[4] <- ''
colnames(table1)[5] <- ''
colnames(table1)[6] <- ''
table2<- data.frame(matrix2)
table2[,1] <- percent(table2[,1], accuracy = 0.1)
table2[,2] <- percent(table2[,2], accuracy = 0.1)
table2[,3] <- percent(table2[,3], accuracy = 0.1)
table2[,4] <- percent(table2[,4], accuracy = 0.1)
table2[,5] <- percent(table2[,5], accuracy = 0.1)
table2[,6] <- percent(table2[,6], accuracy = 0.1)
colnames(table2)[1] <- ''
colnames(table2)[2] <- ''
colnames(table2)[3] <- ''
colnames(table2)[4] <- ''
colnames(table2)[5] <- ''
colnames(table2)[6] <- ''
for(i in 1:30){
matrix1 <- matrix1%*%matrix1
matrix2 <- matrix2%*%matrix2
}
table1<- data.frame(matrix1)
table1[,1] <- percent(table1[,1], accuracy = 0.1)
table1[,2] <- percent(table1[,2], accuracy = 0.1)
table1[,3] <- percent(table1[,3], accuracy = 0.1)
table1[,4] <- percent(table1[,4], accuracy = 0.1)
table1[,5] <- percent(table1[,5], accuracy = 0.1)
table1[,6] <- percent(table1[,6], accuracy = 0.1)
colnames(table1)[1] <- ''
colnames(table1)[2] <- ''
colnames(table1)[3] <- ''
colnames(table1)[4] <- ''
colnames(table1)[5] <- ''
colnames(table1)[6] <- ''
table2<- data.frame(matrix2)
table2[,1] <- percent(table2[,1], accuracy = 0.1)
table2[,2] <- percent(table2[,2], accuracy = 0.1)
table2[,3] <- percent(table2[,3], accuracy = 0.1)
table2[,4] <- percent(table2[,4], accuracy = 0.1)
table2[,5] <- percent(table2[,5], accuracy = 0.1)
table2[,6] <- percent(table2[,6], accuracy = 0.1)
colnames(table2)[1] <- ''
colnames(table2)[2] <- ''
colnames(table2)[3] <- ''
colnames(table2)[4] <- ''
colnames(table2)[5] <- ''
colnames(table2)[6] <- ''
row1 <- table1[1,]
row2 <- table2[1,]
row1
row2
row1 <- table1[1,]
row2 <- table2[1,]
prob1 <- matrix(nrow=1, ncol=ncol(table1))
for(i in 1:ncol(table1)){
p1 <- row1[1]*0.667
p2 <- row2[1]*0.333
prob1[i] <- p1/(p1+p2)
}
prob1
p1 <- row1[1]*0.667
row1[1]
row1
row1 <- as.numeric(table1[1,])
row2 <- as.numeric(table2[1,])
prob1 <- matrix(nrow=1, ncol=ncol(table1))
p1 <- row1[1]*0.667
p1
row1[1]
row1 <- as.numeric(table1[1,])
row1
prob1 <- matrix(nrow=1, ncol=ncol(table1))
p1 <- table1[1,]*0.667
table1[1,]
p1 <- table1[1,i]*0.667
p1 <- as.numeric(table1[1,i])*0.667
p1
table1<- data.frame(matrix1)
View(table1)
p1 <- matrix1[1,i]*0.667
p1
prob1 <- matrix(nrow=1, ncol=ncol(table1))
for(i in 1:ncol(table1)){
p1 <- matrix1[1,i]*0.667
p2 <- matrix2[1,i]*0.333
prob1[i] <- p1/(p1+p2)
}
prob1
table <- rbind(prob1, 1-prob1)
table
table <- data.frame(rbind(prob1, 1-prob1))
prob1 <- matrix(nrow=1, ncol=ncol(table1))
for(i in 1:ncol(table1)){
p1 <- matrix1[1,i]*0.667
p2 <- matrix2[1,i]*0.333
prob1[i] <- p1/(p1+p2)
}
table <- data.frame(rbind(prob1, 1-prob1))
knitr::kable(table, format = "html", align = "cccccc", row.names=F, table.attr = "style='width:95%;'", format.args = list(big.mark = ","))
prob1 <- matrix(nrow=1, ncol=ncol(table1))
for(i in 1:ncol(table1)){
p1 <- matrix1[1,i]*0.667
p2 <- matrix2[1,i]*0.333
prob1[i] <- p1/(p1+p2)
}
table1 <- data.frame(rbind(prob1, 1-prob1))
table1[,1] <- percent(table1[,1], accuracy = 0.1)
table1[,2] <- percent(table1[,2], accuracy = 0.1)
table1[,3] <- percent(table1[,3], accuracy = 0.1)
table1[,4] <- percent(table1[,4], accuracy = 0.1)
table1[,5] <- percent(table1[,5], accuracy = 0.1)
table1[,6] <- percent(table1[,6], accuracy = 0.1)
knitr::kable(table1, format = "html", align = "cccccc", row.names=F, table.attr = "style='width:95%;'", format.args = list(big.mark = ","))
prob1 <- matrix(nrow=1, ncol=ncol(table1))
for(i in 1:ncol(table1)){
p1 <- matrix1[1,i]*0.667
p2 <- matrix2[1,i]*0.333
prob1[i] <- p1/(p1+p2)
}
table1 <- data.frame(rbind(prob1, 1-prob1))
table1[,1] <- percent(table1[,1], accuracy = 0.1)
table1[,2] <- percent(table1[,2], accuracy = 0.1)
table1[,3] <- percent(table1[,3], accuracy = 0.1)
table1[,4] <- percent(table1[,4], accuracy = 0.1)
table1[,5] <- percent(table1[,5], accuracy = 0.1)
table1[,6] <- percent(table1[,6], accuracy = 0.1)
colnames(table1)[1] <- '1'
colnames(table1)[2] <- '2'
colnames(table1)[3] <- '3'
colnames(table1)[4] <- '4'
colnames(table1)[5] <- '5'
colnames(table1)[6] <- '6'
rownames(table1)[1] <- 'Good driver'
rownames(table1)[2] <- 'Bad driver'
knitr::kable(table1, format = "html", align = "cccccc", row.names=F, table.attr = "style='width:95%;'", format.args = list(big.mark = ","))
prob1 <- matrix(nrow=1, ncol=ncol(table1))
for(i in 1:ncol(table1)){
p1 <- matrix1[1,i]*0.667
p2 <- matrix2[1,i]*0.333
prob1[i] <- p1/(p1+p2)
}
table1 <- data.frame(rbind(prob1, 1-prob1))
table1[,1] <- percent(table1[,1], accuracy = 0.1)
table1[,2] <- percent(table1[,2], accuracy = 0.1)
table1[,3] <- percent(table1[,3], accuracy = 0.1)
table1[,4] <- percent(table1[,4], accuracy = 0.1)
table1[,5] <- percent(table1[,5], accuracy = 0.1)
table1[,6] <- percent(table1[,6], accuracy = 0.1)
colnames(table1)[1] <- '1'
colnames(table1)[2] <- '2'
colnames(table1)[3] <- '3'
colnames(table1)[4] <- '4'
colnames(table1)[5] <- '5'
colnames(table1)[6] <- '6'
rownames(table1)[1] <- 'Good driver'
rownames(table1)[2] <- 'Bad driver'
knitr::kable(table1, format = "html", align = "cccccc", row.names=T, table.attr = "style='width:95%;'", format.args = list(big.mark = ",")) %>%
add_header_above(c(" ", "BMS Level" = 6))
prob1 <- matrix(nrow=1, ncol=ncol(table1))
for(i in 1:ncol(table1)){
p1 <- matrix1[1,i]*0.667
p2 <- matrix2[1,i]*0.333
prob1[i] <- p1/(p1+p2)
}
mean <- prob1*0.75 + (1-prob1)*1.5
table1 <- data.frame(rbind(prob1, 1-prob1, mean))
table1[,1] <- percent(table1[,1], accuracy = 0.1)
table1[,2] <- percent(table1[,2], accuracy = 0.1)
table1[,3] <- percent(table1[,3], accuracy = 0.1)
table1[,4] <- percent(table1[,4], accuracy = 0.1)
table1[,5] <- percent(table1[,5], accuracy = 0.1)
table1[,6] <- percent(table1[,6], accuracy = 0.1)
colnames(table1)[1] <- '1'
colnames(table1)[2] <- '2'
colnames(table1)[3] <- '3'
colnames(table1)[4] <- '4'
colnames(table1)[5] <- '5'
colnames(table1)[6] <- '6'
rownames(table1)[1] <- 'Good driver'
rownames(table1)[2] <- 'Bad driver'
rownames(table1)[3] <- '$$r_{\\ell}'
knitr::kable(table1, format = "html", align = "cccccc", row.names=T, table.attr = "style='width:95%;'", format.args = list(big.mark = ",")) %>%
add_header_above(c(" ", "BMS Level" = 6))
prob1 <- matrix(nrow=1, ncol=ncol(table1))
for(i in 1:ncol(table1)){
p1 <- matrix1[1,i]*0.667
p2 <- matrix2[1,i]*0.333
prob1[i] <- p1/(p1+p2)
}
mean <- prob1*0.75 + (1-prob1)*1.5
table1 <- data.frame(rbind(prob1, 1-prob1, mean))
table1[,1] <- percent(table1[,1], accuracy = 0.1)
table1[,2] <- percent(table1[,2], accuracy = 0.1)
table1[,3] <- percent(table1[,3], accuracy = 0.1)
table1[,4] <- percent(table1[,4], accuracy = 0.1)
table1[,5] <- percent(table1[,5], accuracy = 0.1)
table1[,6] <- percent(table1[,6], accuracy = 0.1)
colnames(table1)[1] <- '1'
colnames(table1)[2] <- '2'
colnames(table1)[3] <- '3'
colnames(table1)[4] <- '4'
colnames(table1)[5] <- '5'
colnames(table1)[6] <- '6'
rownames(table1)[1] <- 'Good driver'
rownames(table1)[2] <- 'Bad driver'
rownames(table1)[3] <- '$$r_{\\ell}$$'
knitr::kable(table1, format = "html", align = "cccccc", row.names=T, table.attr = "style='width:95%;'", format.args = list(big.mark = ",")) %>%
add_header_above(c(" ", "BMS Level" = 6))
xaringan_to_pdf('index.html', NULL, 1, FALSE)
xaringan_to_pdf('index.html', NULL, 1, FALSE)
renv::snapshot()
load('Data/df2.Rda')
library(stringr)
library(dplyr)
library(MASS)
score.nbclaim <- as.formula(NbClaims ~ car_color + need_glasses + territory + language + food + offset(log(risk_expo)))
db.train <- df2 %>% filter(Type=='TRAIN')
db.test <- df2 %>% filter(Type=='TEST')
Poisson   <- glm(score.nbclaim, family=poisson(link=log), data=db.train)
parm <- Poisson$coefficients
parm[9] <- NA
nb2.MASS <- glm.nb(score.nbclaim, data=db.train)
MASS.parm <- c(nb2.MASS$coefficients, nb2.MASS$theta)
parm.basic <- cbind(parm, MASS.parm)
ll.basic <- c(logLik(Poisson), logLik(nb2.MASS))
basic <- rbind(parm.basic, ll.basic)
###################
### MVNB ##########
###################
db.train <- df2 %>% filter(Type=='TRAIN')
db.test <- df2 %>% filter(Type=='TEST')
max.loglike.MVNB <- function(parm){
beta <- parm[1:8]
alpha <- 1/exp(parm[9])
data$lambda <- data$risk_expo*exp(parm[1] +
parm[2]* (data$car_color=="Red") +
parm[3]*(data$need_glasses=='Yes') +
parm[4]*(data$territory=='Suburban') +
parm[5]*(data$territory=='Urban') +
parm[6]*(data$language=='French') +
parm[7]*(data$food=='Vegan') +
parm[8]*(data$food=='Vegetarian') )
data <- data %>%
group_by(policy_no, veh.num) %>%
mutate(l.bullet = cumsum(lambda) - lambda,
nb.bullet = cumsum(NbClaims) - NbClaims)%>%
ungroup()
data$tau.s = alpha + data$l.bullet
data$alpha.s = alpha + data$nb.bullet
ll <- lgamma(data$NbClaims + data$alpha.s) - lgamma(data$alpha.s) - lgamma(data$NbClaims+1) +
data$alpha.s*log(data$tau.s) - data$alpha.s*log(data$lambda+data$tau.s) +
data$NbClaims*log(data$lambda) - data$NbClaims*log(data$lambda+data$tau.s)
return(-sum(ll))
}
data <- db.train
parm <- c(Poisson$coefficients, -10)
max.loglike.MVNB(parm)
logLik(Poisson)
optim.MVNB <- optim(par = parm, max.loglike.MVNB)
optim.MVNB$value
optim.MVNB$par
-0.81801629
exp(-0.81801629)
nb2.MASS$theta
db.train
db.train <- df2 %>% filter(Type=='TRAIN')
db.test <- df2 %>% filter(Type=='TEST')
max.loglike.MVNB <- function(parm){
beta <- parm[1:8]
alpha <- 1/exp(parm[9])
data$lambda <- data$risk_expo*exp(parm[1] +
parm[2]* (data$car_color=="Red") +
parm[3]*(data$need_glasses=='Yes') +
parm[4]*(data$territory=='Suburban') +
parm[5]*(data$territory=='Urban') +
parm[6]*(data$language=='French') +
parm[7]*(data$food=='Vegan') +
parm[8]*(data$food=='Vegetarian') )
data <- data %>%
group_by(policy_no, veh.num, start_date) %>%
mutate(l.bullet = cumsum(lambda) - lambda,
nb.bullet = cumsum(NbClaims) - NbClaims)%>%
ungroup()
data$tau.s = alpha + data$l.bullet
data$alpha.s = alpha + data$nb.bullet
ll <- lgamma(data$NbClaims + data$alpha.s) - lgamma(data$alpha.s) - lgamma(data$NbClaims+1) +
data$alpha.s*log(data$tau.s) - data$alpha.s*log(data$lambda+data$tau.s) +
data$NbClaims*log(data$lambda) - data$NbClaims*log(data$lambda+data$tau.s)
return(-sum(ll))
}
data <- db.train
parm <- c(Poisson$coefficients, -10)
max.loglike.MVNB(parm)
logLik(Poisson)
optim.MVNB <- optim(par = parm, max.loglike.MVNB)
optim.MVNB$value
optim.MVNB$par
logLik(nb2.MASS)
MASS.parm
exp(-0.75079100 )
exp(0.75079100 )
db.train <- df2 %>% filter(Type=='TRAIN')
db.test <- df2 %>% filter(Type=='TEST')
max.loglike.MVNB <- function(parm){
beta <- parm[1:8]
alpha <- 1/exp(parm[9])
data$lambda <- data$risk_expo*exp(parm[1] +
parm[2]* (data$car_color=="Red") +
parm[3]*(data$need_glasses=='Yes') +
parm[4]*(data$territory=='Suburban') +
parm[5]*(data$territory=='Urban') +
parm[6]*(data$language=='French') +
parm[7]*(data$food=='Vegan') +
parm[8]*(data$food=='Vegetarian') )
data <- data %>%
group_by(policy_no, veh.num) %>%
mutate(l.bullet = cumsum(lambda) - lambda,
nb.bullet = cumsum(NbClaims) - NbClaims)%>%
ungroup()
data$tau.s = alpha + data$l.bullet
data$alpha.s = alpha + data$nb.bullet
ll <- lgamma(data$NbClaims + data$alpha.s) - lgamma(data$alpha.s) - lgamma(data$NbClaims+1) +
data$alpha.s*log(data$tau.s) - data$alpha.s*log(data$lambda+data$tau.s) +
data$NbClaims*log(data$lambda) - data$NbClaims*log(data$lambda+data$tau.s)
return(-sum(ll))
}
data <- db.train
parm <- c(Poisson$coefficients, -10)
max.loglike.MVNB(parm)
logLik(Poisson)
optim.MVNB <- optim(par = parm, max.loglike.MVNB)
optim.MVNB$value
optim.MVNB$par
MVNB.parm <- c(optim.MVNB$par[1:8], exp(-optim.MVNB$par[9]))
MVNB.parm
parm <- rep(0,9)
parm
table<- data.frame(cbind(c(ll.Poisson,ll.NB2), c(logs.Poisson,logs.NB2)))
library(tidyverse)
library(xaringan)
library(xaringanthemer)
library(kableExtra)
library(DT)
library(dplyr)
library(ggplot2)
library(kableExtra)
library(scales)
library(MASS)
library(gamlss)
load('Data/df2.Rda')
tempo <- df2[sample(1:nrow(df2)), 1:24]
knitr::kable(head(tempo), format = "html", table.attr = "style='width:95%;'") %>% scroll_box(width = "100%")
res <- df2 %>%
group_by(NbClaims) %>%
summarize(expo = sum(risk_expo),
nb = n())
res$pctexpo <- res$expo/sum(res$expo)
res$pctnb <- res$nb/sum(res$nb)
res$pctexpo <- percent(res$pctexpo, accuracy = 0.1)
res$pctnb <- percent(res$pctnb, accuracy = 0.1)
res <- res[,c(1,3,5,2,4)]
colnames(res)[1] <- 'Nb. of Claims'
colnames(res)[2] <- 'Nb. of obs.'
colnames(res)[3] <- '% of obs.'
colnames(res)[4] <- 'Total exposition'
colnames(res)[5] <- '% of exposition'
knitr::kable(res, format = "html", align = "ccccc",  digits = c(0,0,0, 0,0), table.attr = "style='width:95%;'", format.args = list(big.mark = ","))
mean <- mean(df2$NbClaims)
variance <- sd(df2$NbClaims)^2
test <- data.frame(c(mean, variance))
colnames(test)[1] <- ''
rownames(test)[1] <- 'Mean'
rownames(test)[2] <- 'Variance'
knitr::kable(test, format = "html", digits = c(3), table.attr = "style='width:95%;'")
res <- df2 %>%
group_by(NbClaims) %>%
summarize(expo = sum(risk_expo),
nb = n())
res$pctexpo <- res$expo/sum(res$expo)
res$pctnb <- res$nb/sum(res$nb)
res$pctexpo <- percent(res$pctexpo, accuracy = 0.1)
res$pctnb <- percent(res$pctnb, accuracy = 0.1)
res <- res[,c(1,3,5,2,4)]
colnames(res)[1] <- 'Nb. of Claims'
colnames(res)[2] <- 'Nb. of obs.'
colnames(res)[3] <- '% of obs.'
colnames(res)[4] <- 'Total exposition'
colnames(res)[5] <- '% of exposition'
knitr::kable(res, format = "html", align = "ccccc",  digits = c(0,0,0, 0,0), table.attr = "style='width:95%;'", format.args = list(big.mark = ","))
mean <- mean(df2$NbClaims)
variance <- sd(df2$NbClaims)^2
test <- data.frame(c(mean, variance))
colnames(test)[1] <- ''
rownames(test)[1] <- 'Mean'
rownames(test)[2] <- 'Variance'
test[1, 1] <- cell_spec(test[1, 1], "latex", color = "red")
knitr::kable(test, format = "html", digits = c(3), table.attr = "style='width:95%;'")
library(tidyverse)
library(xaringan)
library(xaringanthemer)
library(kableExtra)
library(DT)
library(dplyr)
library(ggplot2)
library(kableExtra)
library(scales)
library(MASS)
library(gamlss)
library(booktabs)
install.packages('booktabs')
res <- df2 %>%
group_by(NbClaims) %>%
summarize(expo = sum(risk_expo),
nb = n())
res$pctexpo <- res$expo/sum(res$expo)
res$pctnb <- res$nb/sum(res$nb)
res$pctexpo <- percent(res$pctexpo, accuracy = 0.1)
res$pctnb <- percent(res$pctnb, accuracy = 0.1)
res <- res[,c(1,3,5,2,4)]
colnames(res)[1] <- 'Nb. of Claims'
colnames(res)[2] <- 'Nb. of obs.'
colnames(res)[3] <- '% of obs.'
colnames(res)[4] <- 'Total exposition'
colnames(res)[5] <- '% of exposition'
knitr::kable(res, format = "html", align = "ccccc",  digits = c(0,0,0, 0,0), table.attr = "style='width:95%;'", format.args = list(big.mark = ","))
mean <- mean(df2$NbClaims)
variance <- sd(df2$NbClaims)^2
test <- data.frame(c(mean, variance))
colnames(test)[1] <- ''
rownames(test)[1] <- 'Mean'
rownames(test)[2] <- 'Variance'
knitr::kable(test, format = "html", digits = c(3), table.attr = "style='width:95%;'")
xaringan_to_pdf('index.html', NULL, 1, FALSE)
